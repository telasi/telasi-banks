= links_to(Telasi::BANK_HOME_PATH)
%h1= @title
= application(Telasi::BANK_CUST_PATH)

.doc
	%h1 დოკუმენტაცია
	%h2 აღნიშვნები
	%p
		ქვემოთ გამოყენებულია შემდეგი აღნიშვნები:
	%ul
		%li <code>HOST_URL</code> &mdash; სერვერის მისამართი (მაგ. <code>1.1.1.22</code>)
		%li <code>BANK_ID</code> &mdash; ბანკის ID კოდი (მოგაწვდით ადმინისტრატორი, მაგ. <code>10</code>)

	%h2 პროტოკოლი
	%p
		საკომუნიკაციოდ ჩვენ ვიყენებთ <code>HTTP</code> პროტოკოლს,
		<code>REST</code> ვებ-სერვისების ფორმატით.
	%p
		ყველა მოთხოვნა, რომელიც მოხდება თქვენი მხრიდან,
		სხვა პარამეტრებთან ერთად, საჭიროებს შემდეგი არგუმენტების განსაზღვრას:
	%ul
		%li <code>auth_email</code> თქვენი საავტორიზაციო ელექტრონული ფოსტის მისამართი (მოგაწვდით ადმინისტრატორი),
		%li <code>auth_password</code> თქვენი საავტორიზაციო პაროლი (მოგაწვდით ადმინისტრატორი),
	%p
		ქვემოთ სიმოკლისთვის ამ პარამეტრებს არ მიუთითებთ. თუმცა ეს
		აუცილებელი პარამეტრებია!!

	%h2 აბონენტების სიის მიღება
	%p
		აბონენტების სიის მისაღებად უნდა შეხვიდეთ მისამართზე:
		<code>http://${HOST_URL}/bank-${BANK_ID}/cust.xml</code>.
		მაგალითად: <code>http://1.1.1.22/bank-10/cust.xml</code>.
		თქვენი მოთხოვნა უნდა განხორციელდეს <code>GET</code>-ის მეშვეობით.
	%p
		საწყისად დაბრუნდება ინფორმაცია პირველ <code>10</code> აბონენტზე.
		აბონენტთა რაოდენობის სამართავად, ასევე სხვა ფურცლის მიღების მიზნით
		ძირითად მისამართთან ერთად გამოიყენეთ პარამეტრები:
	%ul
		%li <code>page</code> &mdash; გამოსატანი გვერდი (საწყისი მნიშვნელობაა <code>1</code>);
		%li <code>per_page</code> &mdash; გვერდზე გამოსატანი აბონენტების მაქსიმალური რაოდენობა (საწყისი მნიშვნელობაა <code>10</code>, მაქსიმალური მნიშვნელობაა <code>1000</code>).
	%p
		ასე, მაგალითად, <code>100</code> აბონენტის ინფორმაციის გამოტანა მე-<code>3</code> გვერდზე მოითხოვს შემდეგ
		მისამართზე მიმართვას: <code>http://1.1.1.22/bank-10/cust.xml?page=3&per_page=100</code>.
	%p
		აღნიშნული მოთხოვნის საფუძველზე თქვენ დაგიბრუნდებათ XML ფორმატში დოკუმენტი, რომელიც შესაძლოა ასე გამოიყურებოდეს:
	%pre
		:escaped
				<customers offset="0" size="1" total="1">
				<customer>
					<number>0071772</number>
					<balance>23.86</balance>
					<balance_trash>7.55</balance_trash>
				</customer>
			</customers>
	%p
		<code>customers</code> ელემენტს სამი ატრიბუტი აქვს:
	%ul
		%li <code>offset</code> ათვლის სათავე (<code>0</code>-ის ფუძით);
		%li <code>size</code> მოცემული სიის სიგრძე;
		%li <code>total</code> აბონენტთა სრული რაოდენობა თქვენი ბანკისთვის.
	%p
		<code>customers</code>-ში თითოულ აბონენტზე ინფორმაცია განთავსებულია
		<code>customer</code> ტეგის შიგნით.
		<code>customer</code> ტეგს შემდეგი სამი ელემენტი აქვს:
	%ul
		%li <code>number</code> &mdash; აბონენტის ნომერი,
		%li <code>balance</code> &mdash; აბონენტის მიმდინარე დავალიანება ელექტროენერგიაში,
		%li <code>balance_trash</code> &mdash; აბონენტის მიმდინარე დავალიანება დასუფთავების სამსახურის მიმართ.
		

	%h2 ახალი აბონენტის დამატება
	%p
		ახალი აბონენტის დამატების მიზნით, უნდა გამოაგზავნოთ <code>POST</code> მოთხოვნა
		მისამართზე: <code>http://${HOST_URL}/bank-${BANK_ID}/cust/add.xml</code>.
		ეს მისამართი, შესაძლოა ასე გამოიყურებოდეს:
		<code>http://1.1.1.22/bank-10/cust/add.xml</code>.
	%p
		მოთხოვნის განხორციელების დროს აუცილებლად მიუთითეთ პარამეტრი
		<code>accnumb</code>, რომელიც წარმოადგენს დასამატებელი აბონენტის
		ნომერს. ასე მაგალითად, აბონენტისთვის ნომრით <code>0071772</code>,
		მოთხოვნა უნდა გააგზავნოთ შემდეგ მისამართზე:
		<code>http://1.1.1.22/bank-10/cust/add.xml?accnumb=0071772</code>.
	%p
		ოპერაციის განხორციელების შემდეგ, სისტემა დაგიბრუნებთ
		პასუხს XML დოკუმენტის სახით, რომელსაც ექნება სახე:
	%pre
		:escaped
				<message>აბონენტი დამატებულია: 0071772</message>
	%p
		ან შემდეგი სახის შეცდომის შეტყობინება:
	%pre
		:escaped
				<error>ეს აბონენტი უკვე არის თქვენს ბაზაში: 0071772</error>,
	%p
		შეცდომა დაბრუნდება ასევე იმ შემთხვევაში, თუ შესაბამისი ნომრით
		ვერ მოხერხდა აბონენტის მოძებნა ჩვენს ბაზაში.
	%pre
		:escaped
				<error>ასეთი აბონენტი არ არსებობს: 0071772</error>.